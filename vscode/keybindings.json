// Place your key bindings in this file to override the defaults
[
	// vim keybinds
	// movement
	{
		"key": "ctrl+h",
		"command": "workbench.action.focusLeftGroup",
		"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.focusRightGroup",
		"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.focusAboveGroup",
		"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.focusBelowGroup",
		"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
	},
	{
		"key": "shift+h",
		"command": "workbench.action.previousEditorInGroup",
		"when": "!activeEditorGroupEmpty && editorTextFocus && vim.active && vim.mode != 'Insert'"
	},
	{
		"key": "shift+l",
		"command": "workbench.action.nextEditorInGroup",
		"when": "!activeEditorGroupEmpty && editorTextFocus && vim.active && vim.mode != 'Insert'"
	},

	// file explorer
	{
		"key": "cmd+enter",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "enter",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus"
	},
	
	// {
	//     "key": "enter",
	//     "command": "list.select",
	//     "when": "listFocus && !inputFocus"
	// },

	// Autosuggest Navigation
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	// Trigger vspacecode in different situations
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "sideBarFocus && !inputFocus && !whichkeyActive"
	},
	// Add ctrl+h/l to navigate in file browser
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "e",
		"command": "whichkey.triggerKey",
		"args": {
			"key": "e",
			"when": "sideBarVisible && explorerViewletVisible"
		},
		"when": "explorerViewletVisible && sideBarVisible && whichkeyVisible"
	},
	{
		"key": "t",
		"command": "-whichkey.triggerKey",
		"when": "explorerViewletVisible && sideBarVisible && whichkeyVisible"
	},
]