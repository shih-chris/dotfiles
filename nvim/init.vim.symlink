" Don't try to be vi compatible
set nocompatible

" ----- Plugin Handling -----

" Helps force plugins to load correctly when it is turned back on below
filetype off

" Begin loading plugins
call plug#begin()

" Optionally install vim-plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" List of plugins
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
Plug 'junegunn/fzf', {'dir': '~/.fzf', 'do': './install --bin'}
Plug 'junegunn/fzf.vim'
" Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Load NERDTree
Plug 'scrooloose/nerdtree'
let g:NERDTreeShowHidden = 1 " Show hidden files/directories by default

" Load colorschemes
Plug 'joshdick/onedark.vim'

" Load lightline
Plug 'itchyny/lightline.vim'
Plug 'mgee/lightline-bufferline' " For tabs on top

" Be sure to install fugitive for the below config to work and provide git status information
Plug 'tpope/vim-fugitive'

let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'tabline': {
      \   'left': [['buffers']],
      \   'right': [[ 'exit' ]],
      \ },
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified'] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head',
      \   'cocstatus': 'coc#status'
      \ },
      \ 'component_expand': {
      \   'buffers': 'lightline#bufferline#buffers',
      \ },
      \ 'component_type': {
      \   'buffers': 'tabsel'
      \ },
      \ }
let g:lightline#bufferline#shorten_path = 1

" let g:lightline = {
"     \   'colorscheme': 'wombat',
" \ }

" Plug 'vim-airline/vim-airline'
" Plug 'vim-airline/vim-airline-themes'
" let g:airline_powerline_fonts = 1
" let g:airline#extensions#tabline#enabled = 1
" let g:airline_theme='zenburn'


" End loading plugins
call plug#end()

" Turn on syntax highlighting
syntax enable

" For plugins to load correctly
filetype plugin indent on


" ----- Custom Keymapping -----

inoremap jk <ESC>
nnoremap j gj
nnoremap k gk
let mapleader = " "
nnoremap Y y$

map <leader><space> :let @/=''<CR> " clear search

set backspace=indent,eol,start " Allow backspacing over indentation, line breaks, and insertion start
nmap <leader>n :NERDTreeToggle<CR>
nmap <leader>f :NERDTreeFind<CR>


" ----- coc.nvim ----- (taken from github.com/neoclide/coc.nvim)

" if hidden is not set, TextEdit might fail
set hidden

" Some servers have issues with backup files
set nobackup
set nowritebackup

" Better display for messages
set cmdheight=2

" Improve experience for diagnostic messages vs. default 4000
set updatetime=300


" ----- Indentation Options -----

set autoindent " new lines inherit the indentation of previous lines
set expandtab " convert tabs to spaces
set shiftround " When shifting lines, round to the nearest multiple of 'shiftwidth'
set shiftwidth=4 " When shifting, use 4 spaces
set smarttab " Insert 'tabstop' number of spaces when the 'tab' key is pressed
set tabstop=4 " Indent using spaces


" ----- User Interface Options -----

set ruler " Show file stats
set visualbell " Blink cursor on error
set hidden " Allow hidden buffers
set wildmenu " Display command line's tab complete options as a menu
set cursorline " Highlight the line currently under cursor
set number " Show line numbers on the sidebard
set relativenumber " Show line number on the current line and relative numbers on all other lines
" set clipboard=unnamedplus " Copy/Paste to clipboard
set noshowmode " INSERT is no longer necessary with lightline-vim


" ----- Search Options -----

set hlsearch " Enable search highlight
set ignorecase " Ignore case when searching
set incsearch " Incremental search
set smartcase " Automatically switch cases when searching


" ----- Text Rendering/Performance Options -----

set lazyredraw " Don't update screen during macro and script execution
set ttyfast " Rendering
set display+=lastline " Always try to show a paragraph's last line
set encoding=utf-8 " Encoding
set linebreak " Avoid wrapping a line in the middle of a word
set scrolloff=1 " The number of screen lines to keep above and below the cursor
set sidescrolloff=5 " The number of screen columns to keep to the left and right of the cursor
set wrap " Enable line wrapping


" ----- Custom Color Scheme -----

" Color scheme (terminal)
"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
"For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
"Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >

" < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
if (has("termguicolors"))
    set termguicolors
endif

syntax on
colorscheme onedark
